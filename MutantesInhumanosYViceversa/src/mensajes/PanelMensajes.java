package mensajes;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import principal.Principal;

/**
 *
 * @author Flor
 */
public class PanelMensajes extends javax.swing.JPanel {

    private Principal principal = null;

    /**
     * Creates new form PanelMensajes
     */
    public PanelMensajes(Principal principal) {
        initComponents();

        this.principal = principal;

        //Cambiamos preferencias de la tabla
        initTabla();

        //Cargamos la informacion
        cargarDatos();
    }

    /**
     * Cambiamos preferencias de la tabla
     */
    private void initTabla() {

        //Hacemos transparente el scroll de la tabla
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        //Cambiamos el tipo de letra de la cabecera de la tabla
        java.awt.Font fuente = new java.awt.Font("Book Antiqua", 1, 20);
        jt_tabla.getTableHeader().setFont(fuente);

        jt_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click: " + jt_tabla.getSelectedRow());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jt_tabla = new javax.swing.JTable();
        btn_eliminar = new javax.swing.JButton();

        setBackground(new java.awt.Color(155, 131, 131));
        setFont(new java.awt.Font("Book Antiqua", 1, 20)); // NOI18N
        setMinimumSize(new java.awt.Dimension(970, 510));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(970, 510));

        jScrollPane1.setBackground(new java.awt.Color(155, 131, 131));
        jScrollPane1.setOpaque(false);

        jt_tabla.setBackground(new java.awt.Color(232, 195, 158));
        jt_tabla.setFont(new java.awt.Font("Book Antiqua", 1, 20)); // NOI18N
        jt_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Leido", "Usuario", "Fecha", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_tabla.setGridColor(new java.awt.Color(255, 255, 255));
        jt_tabla.setOpaque(false);
        jt_tabla.setRowHeight(30);
        jt_tabla.setSelectionBackground(new java.awt.Color(180, 137, 105));
        jt_tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jt_tabla.setShowGrid(true);
        jt_tabla.getTableHeader().setResizingAllowed(false);
        jt_tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jt_tabla);
        if (jt_tabla.getColumnModel().getColumnCount() > 0) {
            jt_tabla.getColumnModel().getColumn(2).setMinWidth(155);
            jt_tabla.getColumnModel().getColumn(2).setPreferredWidth(155);
            jt_tabla.getColumnModel().getColumn(2).setMaxWidth(155);
        }

        btn_eliminar.setBackground(new java.awt.Color(249, 246, 246));
        btn_eliminar.setFont(new java.awt.Font("Book Antiqua", 1, 20)); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed

        DefaultTableModel model = (DefaultTableModel) jt_tabla.getModel();

        int posMensaje = jt_tabla.getSelectedRow();

        if (posMensaje < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un mensaje de la tabla.");
        } else {

            int option;
            option = JOptionPane.showConfirmDialog(
                    this,
                    "¿Estás seguro de que quieres eliminar el mensaje?",
                    "Mensaje",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (option == JOptionPane.YES_OPTION) {
                //TODO ELIMINAR DE LA BD

                model.removeRow(posMensaje);

                JOptionPane.showMessageDialog(this, "Mensaje Eliminado.");
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    /**
     * Cargamos la informacion en la tabla
     *
     */
    private void cargarDatos() {
        // TODO
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt_tabla;
    // End of variables declaration//GEN-END:variables

}
